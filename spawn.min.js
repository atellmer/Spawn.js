var Spawn=function(){"use strict";var a={},b={},c={},d={"*":[]},e="@@SPAWN/INIT",f=function(){function g(a,b){var e,c=a.split("."),d=m(b);for(e=0;e<c.length;e++){if(!d.hasOwnProperty(c[e]))return null;d=d[c[e]]}return d}function h(a,b){return JSON.stringify(g(a,b))}function i(c){var e;for(e in d)if(d.hasOwnProperty(e)){if(e===c){k(d[e]);continue}if(c.length<e.length&&new RegExp("^\\"+c+".","i").test(e)&&h(e,b)!==h(e,a)){k(d[e]);continue}if(c.length>e.length&&new RegExp("^\\"+e+".","i").test(c)){k(d[e]);continue}}k(d["*"])}function j(){var a;for(a in d)d.hasOwnProperty(a)&&(e=a,k(d[a]),k(d["*"]))}function k(a){var b;for(b=0;b<a.length;b++)a[b]()}function l(a,b){var c;for(c=0;c<a.length;c++)if(a[c]===b)return!1;return!0}function m(a){return JSON.parse(JSON.stringify(a))}function n(a){var b=Object.prototype.toString.call(a);return"object"==typeof a&&"array"!==b.slice(8,b.length-1).toLowerCase()}var f=this;if(arguments[0]){if(!n(arguments[0]))throw new Error("Spawn: the initial state must be plain object!");a=arguments[0]}Spawn=function(){return f},f.getState=function(){return m(a)},f.select=function(b){if("string"==typeof b)switch(b){case"*":return m(a);case"->":return e;default:return g(b,a)}if("function"==typeof b)return b(m(a));throw new Error("Spawn: the select method takes only a string or function as argument!")},f.detect=function(b,e){if("string"!=typeof b)throw new Error("Spawn: the detect method takes only a string for first argument!");if("function"!=typeof e)throw new Error("Spawn: the detect method takes only a function for second argument!");return d[b]||(d[b]=[]),"*"===b&&l(d[b],e)?(d[b].push(e),f):l(d[b],e)?(d[b].push(e),g(b,a)&&(c=m(a),i(b)),f):f},f.update=function(g,l){if("string"!=typeof g)throw new Error("Spawn: the update method takes only a string for first argument!");var s,o=g.split("."),p=m(a),q=p;if("*"===g){if(n(l))return a=m(l),b={},c={},j(),f;throw new Error("Spawn: the update method takes only a plain object for replace full state! Check your update('*') method.")}for(e=g,s=0;s<o.length;s++){if(p.hasOwnProperty(o[s])||(p[o[s]]={}),s===o.length-1){p[o[s]]=l;break}p=p[o[s]]}return c=m(q),h(g,a)!==h(g,c)?(a=m(c),i(g),b=m(c)):k(d["*"]),f}};return f}();